Group ID G06: yl1949, ws951, sy1288

---------------
Compile and Run
---------------

1. Shell Script:

If the port 25806 is occupied somehow, you could change the value of 'SERVER'
variable in start.sh to one that is available.

Construct index:  $ chmod u+x SearchEngine.sh
		  $ ./SearchEngine.sh ./SearchEngine.sh \
                    -â€”mode=index --options=conf/engine.conf
 

Serving:  	  $ ./evaluate.sh \--mode=serve --port=[port] --options=conf/engine.conf
		    

2. Manual:

We used external library, Apache logging services, log4j to proccess
our logs. So, whenever compile the files, run server or run evaluation,
the path to the log4j files need to be include in classpath. Also, a
logger configuration file need to be include in 

example:  homework1$ mkdir ./bin
		  		   $ javac -d ./bin  ./src/edu/nyu/cs/cs2580/*.java
		           $ cp ./src/log4j2.xml ./bin
		           $ export CLASSPATH=./bin:./bin/lib/log4j-api.jar:./bin/lib/log4j-core.jar
		           $ java edu.nyu.cs.cs2580.SearchEngine ./data/corpus.tsv

		  homework1$ export CLASSPATH=./bin:./bin/lib/log4j-api.jar:./bin/lib/log4j-core.jar
		           $ curl " http://<HOST>:25806/search?query=<QUERY>&ranker=<RANKER-TYPE>&format=text" | \
     				java edu.nyu.cs.cs2580.Evaluator <PATH-TO-JUDGMENTS>



Text Processing:
1. Using Snowball Porter Stemmer Java library for aggressive text stemming, all library files are packaged into the "edu.nyu.cs.cs2580.Snowball".
2. Using Apache Lucene KStmmer Java Library for text stemming with validation, all library files are packaged into the "edu.nyu.cs.cs2580.KStemmer". 
3. Using JSoup for HTML extracting.
2. Using JFlex for text analysis. All regular expressions are based on Word Boundaries defined on http://www.unicode.org/reports/tr29/.  